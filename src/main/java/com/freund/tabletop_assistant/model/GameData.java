package com.freund.tabletop_assistant.model;

import java.util.List;

public final class GameData {
        // TODO set static final DM UUID for damage source
        public static final List<OldClassAction> CLASS_ACTIONS = List.of(
                        new OldClassAction("Rage", List.of("Bonus Action", "Rage Charge"), false, false, List.of(),
                                        "(Available only in combat) Deal 2 extra damage with melee and improvised weapons, and throwing. You have Resistance to physical damage, and Advantage on Strength Checks and Saving Throws. Rage ends early if you don't attack an enemy or take damage each turn. You can't cast or concentrate on spells while raging."),
                        new OldClassAction("Action Surge", List.of("Action Surge Charge"), false, false, List.of(),
                                        "Immediately gain an extra action to use this turn.")
        //Create Spell Slot
        //Bardic Inspiration
        //Cutting Words

        // unique actions of summons and druid wild shape also go here (don't need monsters since players aren't gonna be controlling them) - technically racial actions
        // Water elemental: Slam, Winter's Breath, Multiattack
        );

        public static final List<OldSpell> SPELLS = List.of(
                        // Cantrips
                        new OldSpell("Acid Splash", 0, SchoolOfMagic.CONJURATION, List.of("Action"), false, false, false,
                                        List.of("{creature_level}/5+1"),
                                        "Throw a bubble of acid that damages each creature it hits. {0}d6 Acid damage (DEX save to negate). AoE: 2m"),
                        new OldSpell("Blade Ward", 0, SchoolOfMagic.ABJURATION, List.of("Action"), false, false, false,
                                        List.of(),
                                        "Take only half the damage from Physical attacks. Duration: 2 turns"), // TODO StatusEffect
                        new OldSpell("Bone Chill", 0, SchoolOfMagic.NECROMANCY, List.of("Action"), false, false, false,
                                        List.of("{creature_level}/5+1"),
                                        "Prevent the target from healing until your next turn. An undead target receives Disadvantage on Attack rolls. {0}d8 Necrotic damage"), // TODO StatusEffect
                        new OldSpell("Dancing Lights", 0, SchoolOfMagic.EVOCATION, List.of("Action"), true, false, false,
                                        List.of(), "Illuminate a  9m radius."),
                        new OldSpell("Eldritch Blast", 0, SchoolOfMagic.EVOCATION, List.of("Action"), false, false, false,
                                        List.of("{creature_level}/5+1"),
                                        "Conjure {0} beam(s) of crackling energy. Each beam can be targeted individually and deals 1d10 Force damage to a target."),
                        new OldSpell("Fire Bolt", 0, SchoolOfMagic.EVOCATION, List.of("Action"), false, false, false,
                                        List.of("{creature_level}/5+1"),
                                        "Hurl a mote of fire. {0}d10 Fire damage."),
                        new OldSpell("Friends", 0, SchoolOfMagic.ENCHANTMENT, List.of("Action"), true, false, false,
                                        List.of(),
                                        "Gain Advantage on Charisma Checks against a non-hostile creature."), // TODO StatusEffect
                        new OldSpell("Guidance", 0, SchoolOfMagic.DIVINATION, List.of("Action"), true, false, false,
                                        List.of(),
                                        "The target gains +1d4 bonus to Ability checks. Duration: 10 turns"), // TODO StatusEffect
                        new OldSpell("Light", 0, SchoolOfMagic.EVOCATION, List.of("Action"), false, false, false,
                                        List.of(),
                                        "Infuse an object with an aura of light. Only affects one target at a time."),
                        new OldSpell("Mage Hand", 0, SchoolOfMagic.CONJURATION, List.of("Action"), false, false, false,
                                        List.of(),
                                        "Create a spectral hand that can manipulate and interact with objects. Duration: 10 turns. Can only be cast once per short rest."),
                        new OldSpell("Minor Illusion", 0, SchoolOfMagic.ILLUSION, List.of("Action"), false, false, false,
                                        List.of(),
                                        "Create an illusion that compels nearby creatures to investigate. You can remain hidden while casting this spell."),
                        new OldSpell("Poison Spray", 0, SchoolOfMagic.CONJURATION, List.of("Action"), false, false, false,
                                        List.of("{creature_level}/5+1"),
                                        "Project a puff of noxious gas, dealing {0}d12 Poison damage to a target (CON save to negate)."),
                        new OldSpell("Produce Flame", 0, SchoolOfMagic.CONJURATION, List.of("Action"), false, false, false,
                                        List.of(),
                                        "A flame in your hand sheds a light in a 9m radius and deals 1d8 Fire damage when thrown."), //TODO create item (that cannot be put in inventory)
                        new OldSpell("Ray of Frost", 0, SchoolOfMagic.EVOCATION, List.of("Action"), false, false, false,
                                        List.of("{creature_level}/5+1"),
                                        "Reduces the target's Movement Speed by 3m. {0}d8 Cold damage. Duration: 1 turn"), // TODO StatusEffect
                        new OldSpell("Resistance", 0, SchoolOfMagic.ABJURATION, List.of("Action"), true, false, false,
                                        List.of(),
                                        "Make a target more resistant to spell effects and conditions: it receives a +1d4 bonus to Saving throws. Duration: 10 turns"), //TODO
                        new OldSpell("Sacred Flame", 0, SchoolOfMagic.EVOCATION, List.of("Action"), false, true, false,
                                        List.of("{creature_level}/5+1"),
                                        "Engulf a target in a flame-like radiance. {0}d8 Radiant damage (DEX save to negate)."),
                        new OldSpell("Shillelagh", 0, SchoolOfMagic.TRANSMUTATION, List.of("Bonus Action"), false, false,
                                        false, List.of(),
                                        "Your staff or club becomes magical: it deals 1d8 + Wisdom Modifier Bludgeoning damage, and uses your Spellcasting Ability for Attack rolls. Duration: 10 turns."), // TODO StatusEffect
                        new OldSpell("Shocking Grasp", 0, SchoolOfMagic.EVOCATION, List.of("Action"), false, false, false,
                                        List.of("{creature_level}/5+1"),
                                        "The target cannot use Reactions. This spell has Advantage on creatures with metal Armour. {0}d8 Lightning damage. Duration: 1 turn"), // TODO StatusEffect
                        new OldSpell("Thaumaturgy", 0, SchoolOfMagic.TRANSMUTATION, List.of("Action"), false, false, false,
                                        List.of(),
                                        "Gain Advantage on Intimidation and Performance Checks. Duration: 10 turns"), // TODO StatusEffect
                        new OldSpell("Thorn Whip", 0, SchoolOfMagic.TRANSMUTATION, List.of("Action"), false, false, false,
                                        List.of("{creature_level}/5+1"),
                                        "Pulls the creature 3m closer to you. The target cannot be pulled if it is Huge in size. {0}d6 Piercing damage"),
                        new OldSpell("True Strike", 0, SchoolOfMagic.DIVINATION, List.of("Action"), true, false, false,
                                        List.of(),
                                        "Gain Advantage on your next Attack roll against the target."), // TODO StatusEffect
                        new OldSpell("Vicious Mockery", 0, SchoolOfMagic.ENCHANTMENT, List.of("Action"), false, false,
                                        false, List.of("{creature_level}/5+1"),
                                        "Insult a creature: it has Disadvantage on its next Attack roll. {0}d4 Psychic damage (WIS save to negate). Duration: 1 turn."), // TODO StatusEffect

            // Level 1 spells
            new OldSpell("Animal Friendship", 1, SchoolOfMagic.ENCHANTMENT,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    "Charm {level} beast(s) not to attack you. The creature must have an Intelligence of 3 or less. Condition ends early if you or an ally hurts the target. (WIS save)"),
            new OldSpell("Armour of Agathys", 1, SchoolOfMagic.ABJURATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false,
                    List.of("{upcast}*5+5"),
                    "Gain {0} temporary hit points and deal {0} Cold damage to any creature that hits you with a melee attack. Duration: Until Long rest."), // TODO StatusEffect
            new OldSpell("Arms of Hadar", 1, SchoolOfMagic.CONJURATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false,
                    List.of("{upcast}+2"),
                    "Summon dark tendrils and deal {0}d6 Necrotic damage to enemies in an area centered on the caster, preventing them from taking Reactions(STR save to take half damage and negate effect). AoE: 3m. Duration: 1 turn."),
            new OldSpell("Bane", 1, SchoolOfMagic.ENCHANTMENT, List.of("Action", "Level {level} Spellslot"),
                    true, false, false, List.of("{upcast}+3"),
                    "Up to {0} creatures receive a -1d4 penalty to Attack rolls and Saving throws (CHA save). Duration: 10 turns."), // TODO StatusEffect
            new OldSpell("Bless", 1, SchoolOfMagic.ENCHANTMENT, List.of("Action", "Level {level} Spellslot"),
                    true, false, false, List.of("{upcast}+3"),
                    "Bless up to {0} creatures. They gain a +1d4 bonus to Attack rolls and Saving throws. Duration: 10 turns."),
            new OldSpell("Burning Hands", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false,
                    List.of("{upcast}+3"),
                    "Shoot a flaming cone from your fingertips and deal {0}d6 Fire damage (DEX save to take half damage). Cone radius: 5m"),
            new OldSpell("Charm Person", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    "Charm {level} humanoid(s) to prevent it from attacking you (WIS save). You gain Advantage on Charisma Checks in dialogue. Enemies have Advantage on Saving throws against being Charmed. Condition ends early if you or an ally hurts the target."), // TODO StatusEffect
            new OldSpell("Chromatic Orb", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false,
                    List.of("2+{upcast}", "3+{upcast}"),
                    "Hurl a ball of energy and deal the desired damage type to enemies ({1}d8 Thunder damage, or {0}d8 Acid, Cold, Fire, Lightning or Poison damage)."),
            new OldSpell("Colour Spray", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, true, false, List.of("33+11*{upcast}"),
                    "Blind creatures up to a combined {0} Hit Points."),
            new OldSpell("Command", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"),
                    false, false, false, List.of(),
                    ""),
            new OldSpell("Compelled Duel", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    ""),
            new OldSpell("Create or Destroy Water", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Cure Wounds", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Disguise Self", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, true, List.of(),
                    ""),
            new OldSpell("Dissonant Whispers", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Divine Favour", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    ""),
            new OldSpell("Enhance Leap", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, true, List.of(),
                    ""),
            new OldSpell("Ensnaring Strike", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    ""),
            new OldSpell("Entangle", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"),
                    true, false, false, List.of(),
                    ""),
            new OldSpell("Expeditious Retreat", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    ""),
            new OldSpell("Faerie Fire", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    ""),
            new OldSpell("False Life", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Feather Fall", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, true, List.of(),
                    ""),
            new OldSpell("Find Familiar", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, true, List.of(),
                    ""),
            new OldSpell("Fog Cloud", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"),
                    true, false, false, List.of(),
                    ""),
            new OldSpell("Goodberry", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"),
                    false, false, false, List.of(),
                    ""),
            new OldSpell("Grease", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"),
                    false, false, false, List.of(),
                    ""),
            new OldSpell("Guiding Bolt", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Hail of Thorns", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Healing Word", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Hellish Rebuke", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Heroism", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"),
                    true, false, false, List.of(),
                    ""),
            new OldSpell("Hex", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"), true,
                    false, false, List.of(),
                    ""),
            new OldSpell("Hunter's Mark", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    ""),
            new OldSpell("Ice Knife", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"),
                    false, false, false, List.of(),
                    ""),
            new OldSpell("Inflict Wounds", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Longstrider", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, true, List.of(),
                    ""),
            new OldSpell("Mage Armour", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Magic Missile", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, true, false,
                    List.of("3+{upcast}"),
                    "Shoot {0} magical darts, each dealing 1d4+1 Force damage. They always hit their target, and can each be targeted individually."),
            new OldSpell("Protection from Evil and Good", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Ray of Sickness", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Sanctuary", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"),
                    false, false, false, List.of(),
                    ""),
            new OldSpell("Searing Smite", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    ""),
            new OldSpell("Shield", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"),
                    false, false, false, List.of(),
                    ""),
            new OldSpell("Shield of Faith", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    ""),
            new OldSpell("Sleep", 1, SchoolOfMagic.EVOCATION, List.of("Action", "Level {level} Spellslot"),
                    false, false, false, List.of(),
                    ""),
            new OldSpell("Speak with Animals", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, true, List.of(),
                    ""),
            new OldSpell("Tasha's Hideous Laughter", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    ""),
            new OldSpell("Thunderous Smite", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Thunderwave", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), false, false, false, List.of(),
                    ""),
            new OldSpell("Witch Bolt", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    ""),
            new OldSpell("Wrathful Smite", 1, SchoolOfMagic.EVOCATION,
                    List.of("Action", "Level {level} Spellslot"), true, false, false, List.of(),
                    "")

        //---

        // https://bg3.wiki/wiki/List_of_all_spells

        );

        private GameData() { // Private constructor to prevent instantiation
                throw new UnsupportedOperationException("This is a utility class and cannot be instantiated");
        }
}